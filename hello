#!/usr/bin/env ruby

require 'optparse'
require 'webrick'

ng = false
blink = false
unicode = false
greeting = "Hello World!"
server = false
port = 8000

OptionParser.new do |opts|
  opts.banner = "Usage: hello [OPTION]"

  opts.separator "Print a friendly, customizable greeting."
  opts.separator ""

  opts.on("-h", "--help", "display this help and exit") do
    puts opts
    exit
  end

  opts.on("-v", "--version", "display version information and exit") do
    puts "super-hello 0.1.0-rc2"
    exit
  end

  opts.separator ""

  opts.on("-n", "--next-generation", "use next-generation greeting format") do
    ng = true
  end

  opts.on("-g", "--greeting=TEXT", "use TEXT as the greeting message") do |custom_greeting|
    greeting = custom_greeting
  end

  opts.on("-s", "--server", "launch http server to deliver greetings") do |server_port|
    server = true
  end

  opts.on("-p", "--port=PORT", "listen on PORT (default 8000)") do |server_port|
    port = server_port.to_i
  end

  opts.on("-b", "--blink", "use ANSI escapes to blink text") do
    blink = true
  end

  opts.on("-u", "--unicode", "use unicode box drawing characters") do
    unicode = true
  end

  opts.separator ""

end.parse!

greeting =
  case
  when ng && unicode
    line = "─" * (greeting.length+2)

    ["┌#{ line     }┐",
     "│ #{greeting} │",
     "└#{ line     }┘"].join("\n")
  when ng
    line = "-" * (greeting.length+2)

    ["+#{ line     }+",
     "| #{greeting} |",
     "+#{ line     }+"].join("\n")
  else
    greeting
  end

greeting =
  if blink
    "\x1b[5m#{greeting}\x1b[0m"
  else
    greeting
  end

if server
  server = WEBrick::HTTPServer.new :Port => port
  server.mount_proc '/' do |req, res|
    res.body = greeting + "\n"
    res.content_type = 
      if unicode
        "text/plain; charset=utf8"
      else
        "text/plain"
      end
  end

  trap 'INT' do server.shutdown end

  server.start
else
  puts greeting
end
